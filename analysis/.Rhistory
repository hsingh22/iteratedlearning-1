gleit_order <- gleit %>%
ungroup() %>%
group_by(referent) %>%
arrange(time) %>%
slice(1) %>%
arrange(time)
gleit_ordered <- gleit %>%
mutate(referent = factor(referent, levels = gleit_order$referent))
ggplot(gleit_ordered, aes(x = as.factor(time), y = referent, fill=topic)) +
geom_tile(color = "white", show.legend=TRUE) +
theme_bw()+
scale_x_discrete(breaks= c(seq(from = 1, to = 1000, by = 10)))
gleit<-fixed_runs %>%
mutate(topic = ifelse(referent %in% food_words,  "Food", ifelse(referent %in% animal_words, "Animal", ifelse(referent %in% body_words, "Body", ifelse(referent %in% basic_words, "Basic", ifelse(referent %in% baby_words, "Baby", ifelse(referent %in% home_words, "Home", ifelse(referent %in% toy_words, "Toy", ifelse(referent %in% people_words, "Person", ifelse(referent %in% clothes_words, "Clothes", ifelse(referent %in% nature_words, "Nature", "Other"))))))))))) %>%
filter(subj==103, age==14)#arbitrary choice
gleit_order <- gleit %>%
ungroup() %>%
group_by(referent) %>%
arrange(time) %>%
slice(1) %>%
arrange(time)
gleit_ordered <- gleit %>%
mutate(referent = factor(referent, levels = gleit_order$referent))
ggplot(gleit_ordered, aes(x = as.factor(time), y = referent, fill=topic)) +
geom_tile(color = "white", show.legend=TRUE) +
theme_bw()+
scale_x_discrete(breaks= c(seq(from = 1, to = 1000, by = 10)))
View(gleit)
View(gleit)
gleit<-fixed_runs %>%
mutate(topic = ifelse(referent %in% food_words,  "Food", ifelse(referent %in% animal_words, "Animal", ifelse(referent %in% body_words, "Body", ifelse(referent %in% basic_words, "Basic", ifelse(referent %in% baby_words, "Baby", ifelse(referent %in% home_words, "Home", ifelse(referent %in% toy_words, "Toy", ifelse(referent %in% people_words, "Person", ifelse(referent %in% clothes_words, "Clothes", ifelse(referent %in% nature_words, "Nature", "Other"))))))))))) %>%
filter(subj==103, age==14, time < 1500)#arbitrary choice
gleit_order <- gleit %>%
ungroup() %>%
group_by(referent) %>%
arrange(time) %>%
slice(1) %>%
arrange(time)
gleit_ordered <- gleit %>%
mutate(referent = factor(referent, levels = gleit_order$referent))
ggplot(gleit_ordered, aes(x = as.factor(time), y = referent, fill=topic)) +
geom_tile(color = "white", show.legend=TRUE) +
theme_bw()+
scale_x_discrete(breaks= c(seq(from = 1, to = 1000, by = 10)))
gleit<-fixed_runs %>%
mutate(topic = ifelse(referent %in% food_words,  "Food", ifelse(referent %in% animal_words, "Animal", ifelse(referent %in% body_words, "Body", ifelse(referent %in% basic_words, "Basic", ifelse(referent %in% baby_words, "Baby", ifelse(referent %in% home_words, "Home", ifelse(referent %in% toy_words, "Toy", ifelse(referent %in% people_words, "Person", ifelse(referent %in% clothes_words, "Clothes", ifelse(referent %in% nature_words, "Nature", "Other"))))))))))) %>%
filter(subj==103, age==14, time < 1200)#arbitrary choice
gleit_order <- gleit %>%
ungroup() %>%
group_by(referent) %>%
arrange(time) %>%
slice(1) %>%
arrange(time)
gleit_ordered <- gleit %>%
mutate(referent = factor(referent, levels = gleit_order$referent))
ggplot(gleit_ordered, aes(x = as.factor(time), y = referent, fill=topic)) +
geom_tile(color = "white", show.legend=TRUE) +
theme_bw()+
scale_x_discrete(breaks= c(seq(from = 1, to = 1000, by = 10)))
data2 <- read_csv("tabletstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
data2 <- read_csv("tabletstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
setwd("~/Documents/GitHub/iteratedlearning/analysis")
data2 <- read_csv("tabletstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
trial_data <- calculate_data %>%
filter(target == 1) %>%
group_by(trial, sub_id) %>%
summarise(accuracy = mean(accuracy)) %>%
tidyboot_mean(accuracy)
ggplot(trial_data, aes(x = trial, y = empirical_stat,
ymin = ci_lower, ymax = ci_upper)) +
geom_pointrange() +
geom_smooth()
pdf("trial_data.pdf", width = 10, height = 10)
calculate_data %>%
distinct(trial, row, col, target) %>%
mutate(sub_id = "target") %>%
rename(input = target) %>%
bind_rows(select(calculate_data, sub_id, trial, row, col, input)) %>%
mutate(input = factor(input), sub_id = factor(sub_id, levels = unique(.$sub_id))) %>%
ggplot(aes(x = col, y = row, fill = input)) +
facet_grid(trial ~ sub_id) +
geom_tile(color = "black") +
scale_fill_manual(values = c("0" = "white", "1" = "black"), guide = F)
dev.off()
data2 <- read_csv("tabletstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
data2 <- read_csv("tabletstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
data2 <- read_csv("tabletstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
trial_data <- calculate_data %>%
filter(target == 1) %>%
group_by(trial, sub_id) %>%
summarise(accuracy = mean(accuracy)) %>%
tidyboot_mean(accuracy)
ggplot(trial_data, aes(x = trial, y = empirical_stat,
ymin = ci_lower, ymax = ci_upper)) +
geom_pointrange() +
geom_smooth()
pdf("trial_data.pdf", width = 10, height = 10)
calculate_data %>%
distinct(trial, row, col, target) %>%
mutate(sub_id = "target") %>%
rename(input = target) %>%
bind_rows(select(calculate_data, sub_id, trial, row, col, input)) %>%
mutate(input = factor(input), sub_id = factor(sub_id, levels = unique(.$sub_id))) %>%
ggplot(aes(x = col, y = row, fill = input)) +
facet_grid(trial ~ sub_id) +
geom_tile(color = "black") +
scale_fill_manual(values = c("0" = "white", "1" = "black"), guide = F)
dev.off()
View(calculate_data)
data2 <- read_csv("iteratedstudyresults.csv") %>%
select(sub_id:input_7_7)
data2 <- read_csv("iteratedstudyresults.csv") %>%
select(sub_id:input_7_7)
data2 <- read_csv("iteratedstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
data2 <- read_csv("iteratedstudyresults.csv") %>%
select(sub_id:input_7_7)
#filters out people who didn't complete 10 trials
data <- data2 %>%
arrange(sub_id, trial) %>%
group_by(sub_id) %>%
mutate(n = n()) %>%
filter(n == 10 & condition != "test" & sub_id != 0) %>%
select(-n) %>%
ungroup()
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
View(data)
View(data)
spread_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial, -comments)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
unite(ty_col, type, col) %>%
spread(ty_col, value)
#temp
inputs<-data %>%
select(-contains("target"))
target<-data %>%
select(-contains("input"))
responses <- inputs %>%
gather(row, value, -sub_id, -age, -condition, -generation, -date, -time, -trial, -comments)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(col, value) %>%
rename(input_col0 = "0", input_col1 = "1", input_col2 = "2", input_col3 = "3", input_col4 = "4", input_col5 = "5", input_col6 = "6", input_col7 = "7")
targets <- target %>%
select(-condition, -age, -generation, -date, -time, -sub_id, -comments)%>%
unique() %>%
gather(row, value, -trial)%>%
separate(row, c("type","row", "col")) %>%
#arrange(trial)
spread(col, value) %>%
rename(target_col0 = "0", target_col1 = "1", target_col2 = "2", target_col3 = "3", target_col4 = "4", target_col5 = "5", target_col6 = "6", target_col7 = "7")
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial, -comments)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
filter(condition == "test1") %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
calculate_data <- data %>%
gather(row, value, -sub_id, -age, -condition, -generation, -trial, -comments)%>%
arrange(sub_id, trial) %>%
separate(row, c("type","row", "col")) %>%
spread(type,value) %>%
mutate(accuracy = input == target,
sub_id = as.character(sub_id))
